// <auto-generated />
using dotnet.DataAccess;
using dotnet.DataAccess.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace dotnet.Migrations
{
    [DbContext(typeof(BusHelperContext))]
    [Migration("20180205231958_enumFeedback")]
    partial class enumFeedback
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("dotnet.DataAccess.Model.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IdUsuario");

                    b.Property<int>("assunto");

                    b.Property<string>("mensagem");

                    b.HasKey("Id");

                    b.ToTable("feedbacks");
                });

            modelBuilder.Entity("dotnet.DataAccess.Model.HistoricoSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("data");

                    b.Property<double>("latitude");

                    b.Property<double>("longitude");

                    b.Property<int?>("sensorId");

                    b.Property<int>("valor");

                    b.HasKey("Id");

                    b.HasIndex("sensorId");

                    b.ToTable("historicoSensores");
                });

            modelBuilder.Entity("dotnet.DataAccess.Model.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("acao");

                    b.Property<double>("latitude");

                    b.Property<double>("longitude");

                    b.Property<int>("tipo");

                    b.Property<int>("valor");

                    b.Property<int?>("veiculoId");

                    b.HasKey("Id");

                    b.HasIndex("veiculoId");

                    b.ToTable("sensores");
                });

            modelBuilder.Entity("dotnet.DataAccess.Model.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("capacidadeSentados");

                    b.Property<int>("capacisadeEmPe");

                    b.Property<string>("nome");

                    b.HasKey("Id");

                    b.ToTable("veiculos");
                });

            modelBuilder.Entity("dotnet.DataAccess.Model.HistoricoSensor", b =>
                {
                    b.HasOne("dotnet.DataAccess.Model.Sensor", "sensor")
                        .WithMany()
                        .HasForeignKey("sensorId");
                });

            modelBuilder.Entity("dotnet.DataAccess.Model.Sensor", b =>
                {
                    b.HasOne("dotnet.DataAccess.Model.Veiculo", "veiculo")
                        .WithMany()
                        .HasForeignKey("veiculoId");
                });
#pragma warning restore 612, 618
        }
    }
}
